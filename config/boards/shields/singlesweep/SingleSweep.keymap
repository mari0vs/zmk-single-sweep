// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

 / {

    behaviors {
        tm: tap_mo {
            label = "tap_mo";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <250>;
            quick-tap-ms = <500>;
            bindings = <&mo>, <&kp>;
        };

        td_pl: tap_dance_pl {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_PL";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp P>, <&kp L>;
        };

        td_yk: tap_dance_yk {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_YK";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp Y>, <&kp K>;
        };

        td_fj: tap_dance_fj {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_FJ";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp F>, <&kp J>;
        };

        td_gh: tap_dance_gh {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_GH";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp G>, <&kp H>;
        };

        td_as: tap_dance_as {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_AS";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp A>, <&kp S>;
        };

        td_od: tap_dance_od {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_OD";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp O>, <&kp D>;
        };

        td_in: tap_dance_in {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_IN";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp I>, <&kp N>;
        };

        td_et: tap_dance_et {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_ET";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp E>, <&kp T>;
        };

        td_ur: tap_dance_ur {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_UR";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp U>, <&kp R>;
        };

        td_zq: tap_dance_zq {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_ZQ";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp Z>, <&kp Q>;
        };

        td_xw: tap_dance_xw {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_XW";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp X>, <&kp W>;
        };

        td_cm: tap_dance_cm {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_CM";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp C>, <&kp M>;
        };

        td_vb: tap_dance_vb {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_VB";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp V>, <&kp B>;
        };

        td_comma: tap_dance_comma {
            compatible = "zmk,behavior-tap-dance";
            label = "tap_dance_comma";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&kp COMMA>, <&kp SEMI>;
        };

        td_dot: tap_dance_dot {
            compatible = "zmk,behavior-tap-dance";
            label = "tap_dance_dot";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&kp DOT>, <&kp COLON>;
        };

        td_fslh: tap_dance_fslh {
            compatible = "zmk,behavior-tap-dance";
            label = "tap_dance_fslh";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&kp FSLH>, <&kp QMARK>;
        };

        td_sqt: tap_dance_sqt {
            compatible = "zmk,behavior-tap-dance";
            label = "tap_dance_sqt";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&kp SQT>, <&kp DQT>;
        };

        td_grave: tap_dance_grave {
            compatible = "zmk,behavior-tap-dance";
            label = "tap_dance_grave";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&kp GRAVE>, <&kp TILDE>;
        };

        td_minus: tap_dance_minus {
            compatible = "zmk,behavior-tap-dance";
            label = "tap_dance_minus";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&kp MINUS>, <&kp UNDER>;
        };

        td_equal: tap_dance_equal {
            compatible = "zmk,behavior-tap-dance";
            label = "tap_dance_equal";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&kp EQUAL>, <&kp PLUS>;
        };

        td_bslh: tap_dance_bslh {
            compatible = "zmk,behavior-tap-dance";
            label = "tap_dance_bslh";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&kp BSLH>, <&kp PIPE>;
        };

        td_brc: tap_dance_brc {
            compatible = "zmk,behavior-tap-dance";
            label = "tap_dance_brc";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&kp LBRC>, <&kp RBRC>;
        };

        td_bkt: tap_dance_bkt {
            compatible = "zmk,behavior-tap-dance";
            label = "tap_dance_bkt";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&kp LBKT>, <&kp RBKT>;
        };

        td_par: tap_dance_par {
            compatible = "zmk,behavior-tap-dance";
            label = "tap_dance_par";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&kp LPAR>, <&kp RPAR>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_l0 {
            timeout-ms = <100>;
            key-positions = <15 16>;
            bindings = <&to 0>;
        };

        combo_LSHFT {
            timeout-ms = <100>;
            key-positions = <8 15>;
            bindings = <&sk LSHFT>;
        };

        combo_LCTRL {
            timeout-ms = <100>;
            key-positions = <7 15>;
            bindings = <&sk LCTRL>;
        };

        combo_LALT {
            timeout-ms = <100>;
            key-positions = <6 15>;
            bindings = <&sk LALT>;
        };

        combo_LGUI {
            timeout-ms = <100>;
            key-positions = <5 15>;
            bindings = <&sk LGUI>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        ALPHA_layer {
            bindings = <

            &kp ESC     &td_pl      &td_yk      &td_fj      &td_gh

            &td_as      &td_od      &td_in      &td_et      &td_ur

            &td_zq      &td_xw      &td_cm      &td_vb      &kp RET

                                                &kp BSPC    &tm 5 SPACE
            >;
        };

        NAV_layer {
            bindings = <

            &kp HOME    &kp PG_DN   &kp PG_UP   &kp END     &none

            &kp LEFT    &kp DOWN    &kp UP      &kp RIGHT   &kp TAB

            &kp LALT    &none       &kp INS     &kp PSCRN   &trans

                                                &trans      &trans
            >;
        };

        SYM_layer {
            bindings = <

            &none       &td_grave   &td_equal   &td_minus   &none

            &td_fslh    &td_sqt     &td_dot     &td_comma   &none

            &td_bslh    &td_brc     &td_bkt     &td_par     &trans

                                                &trans      &trans
            >;
        };

        NUM_layer {
            bindings = <

            &none       &kp N1      &kp N2      &kp N3      &none

            &kp N0      &kp N4      &kp N5      &kp N6      &none

            &none       &kp N7      &kp N8      &kp N9      &trans

                                                &trans      &trans
            >;
        };

        FN_layer {
            bindings = <

            &kp F1      &kp F1      &kp F3      &kp F4      &none

            &kp F5      &kp F6      &kp F7      &kp F8      &none

            &kp F9      &kp F10     &kp F11     &kp F12     &none

                                                &trans      &trans
            >;
        };

        LS_layer {
            bindings = <

            &none       &none       &none       &kp LGUI    &none

            &kp CAPS    &to 1       &to 2       &to 3       &to 4

            &none       &none       &none       &none       &none

                                                &trans      &trans
            >;
        };
    };
};
